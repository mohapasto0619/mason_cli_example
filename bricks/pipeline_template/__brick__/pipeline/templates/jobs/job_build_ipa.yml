parameters:
  env: ''
  flutterVersion: 'stable'
  fvmVersion: ''
  appPackageName: ''
  provisioningProfile: ''
  installAppleCertificate: false
  appleCertificateCertSecureFile: ''
  appleCertificateCertPwd: ''

jobs:
  - job: Build_ipa_${{ parameters.env }}
    displayName: 'Build ${{ parameters.env }} iOS'

    steps:
      - task: InstallAppleCertificate@2
        condition: ${{ parameters.installAppleCertificate }}
        inputs:
          certSecureFile: ${{ parameters.appleCertificateCertSecureFile }}
          certPwd: ${{ parameters.appleCertificateCertPwd }}
          keychain: temp
          deleteCert: true
          
      - template: ../tasks/task_init.yml
        parameters:
          fvmVersion: ${{ parameters.fvmVersion }}
          flutterVersion: ${{ parameters.flutterVersion }}

      - template: ../tasks/task_add_env_banners.yml
        parameters:
          env: ${{ parameters.env }}
          contents:
            - '**/AppIcon.appiconset/*.png'

      - task: ExtractVersionFromTag@1

      - task: UpdateiOSVersionInfoPlist@1
        inputs:
          infoPlistPath: '$(Build.SourcesDirectory)/ios/Runner/Info.plist'

      - template: ../tasks/task_build_sign_ios.yml
        parameters:
          env: ${{ parameters.env }}
          provisioningProfile: ${{ parameters.provisioningProfile }}

      - template: ../tasks/task_rename_ios_artifacts.yml
        parameters:
          env: '${{ parameters.env }}'
          appPackageName: '${{ parameters.appPackageName }}'

      - template: ../tasks/task_publish_artifacts.yml
        parameters:
          sourceFolder: '$(Build.SourcesDirectory)/ios/build-output'
          contents: |
            *.ipa
            *.zip
            *.plist
          targetFolder: 'drop/ios/${{ parameters.env }}'
          artifactName: 'release_${{ parameters.env }}_ios'
